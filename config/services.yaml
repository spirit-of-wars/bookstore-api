# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/{Controller,Service,Repository,Command}'
#        resource: '../src/*'
#        exclude: '../src/{DependencyInjection,Interfaces,Helpers,Entity,Migrations,Tests,Kernel.php,Request.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Command\:
        resource: '../src/Command'
        tags: ['console.command']

    App\DataFixtures\:
        resource: '../src/DataFixtures'
        tags: [doctrine.fixture.orm]

    App\EventListener\FixPostgreSQLDefaultSchemaListener:
        tags:
            - { name: doctrine.event_listener, event: postGenerateSchema }
    App\EventListener\KernelRequestListener:
        tags:
            - {name: kernel.event_listener, event: kernel.request, method: onKernelRequest}
    App\EventListener\KernelControllerListener:
        tags:
            - {name: kernel.event_listener, event: kernel.controller, method: onKernelController}
    App\EventListener\KernelResponseListener:
        tags:
            - {name: kernel.event_listener, event: kernel.response, method: onKernelResponse}
    App\EventListener\KernelExceptionListener:
        tags:
            - {name: kernel.event_listener, event: kernel.exception, method: onKernelException}

    App\MifTools\MifServiceProvider: ~
